<?php

namespace Tests\Unit\Branch;

use App\Models\Todo;
use App\Repositories\TodosRepository;
use Tests\TestCase;

class TodoTest extends TestCase
{
    protected $repository;
    protected function setUp(): void
    {
       $this->repository = new TodosRepository( new Todo());
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * To add to do list.
     * @group testAddTodo
     * @return void
     */
    public function testAddTodo()
    {

        $data =[
            'title'=>'one',
            'status' => true,
            ];
        $response = $this->repository->store($data);
        
        $this->assertNotEmpty($response);
    }
    /**
     * To add to do list.
     * @group testAddTodo
     * @return void
     */
    public function testUpdate()
    {

        $data =[
            'title'=>'one',
            'status' => false,
            ];
        $id = 1;    
        $response = $this->repository->update($data,$id);
        
        $this->assertNotEmpty(response);
    }

    /**
     * get all to do list.
     * @group testGetAllTodo
     * @return void
     */
    public function testGetAllTodo()
    {

        $response = $this->repository->all();
        $this->assertNotEmpty($response);
    }
    
    /**
     * get all to do list.
     * @group testGetActive
     * @return void
     */
    public function testGetActive()
    {

        $response = $this->repository->active();
        $this->assertNotEmpty($response);
    }

    /**
     * get all to do list.
     * @group testGetCompleted
     * @return void
     */
    public function testGetCompleted()
    {

        $response = $this->repository->completed();
        $this->assertNotEmpty($response);
    }
    
    /**
     * get all to do list.
     * @group testClearCompleted
     * @return void
     */
    public function testClearCompleted()
    {

        $this->repository->clearCompleted();
        
        $this->assertTrue(true);
    }
    /**
     * get all to do list.
     * @group testDelete
     * @return void
     */
    public function testDelete()
    {
        $id = 1;
        $this->repository->delete($id);
        
        $this->assertTrue(true);
    }
    
}
